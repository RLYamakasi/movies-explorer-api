[{"D:\\dev\\movies\\frontend\\src\\index.js":"1","D:\\dev\\movies\\frontend\\src\\app\\reportWebVitals.js":"2","D:\\dev\\movies\\frontend\\src\\app\\App.js":"3","D:\\dev\\movies\\frontend\\src\\components\\Registration.js":"4","D:\\dev\\movies\\frontend\\src\\components\\ProtectedRoute.js":"5","D:\\dev\\movies\\frontend\\src\\components\\SavedFilms.js":"6","D:\\dev\\movies\\frontend\\src\\components\\Error.js":"7","D:\\dev\\movies\\frontend\\src\\components\\Login.js":"8","D:\\dev\\movies\\frontend\\src\\components\\Films.js":"9","D:\\dev\\movies\\frontend\\src\\contexts\\CurrentUserContext.js":"10","D:\\dev\\movies\\frontend\\src\\components\\Main.js":"11","D:\\dev\\movies\\frontend\\src\\components\\Account.js":"12","D:\\dev\\movies\\frontend\\src\\utils\\MainApi.js":"13","D:\\dev\\movies\\frontend\\src\\utils\\MoviesApi.js":"14","D:\\dev\\movies\\frontend\\src\\components\\FavoriteButton.js":"15"},{"size":416,"mtime":1674833960885,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1674833960884,"results":"18","hashOfConfig":"17"},{"size":6105,"mtime":1688226668128,"results":"19","hashOfConfig":"17"},{"size":4753,"mtime":1679830255754,"results":"20","hashOfConfig":"17"},{"size":232,"mtime":1677223863302,"results":"21","hashOfConfig":"17"},{"size":7700,"mtime":1688399989320,"results":"22","hashOfConfig":"17"},{"size":380,"mtime":1675793721209,"results":"23","hashOfConfig":"17"},{"size":5023,"mtime":1688400084533,"results":"24","hashOfConfig":"17"},{"size":9995,"mtime":1688225026712,"results":"25","hashOfConfig":"17"},{"size":88,"mtime":1676729532495,"results":"26","hashOfConfig":"17"},{"size":8625,"mtime":1679830130048,"results":"27","hashOfConfig":"17"},{"size":6512,"mtime":1680164623806,"results":"28","hashOfConfig":"17"},{"size":2842,"mtime":1687987683739,"results":"29","hashOfConfig":"17"},{"size":634,"mtime":1683828168906,"results":"30","hashOfConfig":"17"},{"size":1070,"mtime":1682283689529,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"51wp40",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\dev\\movies\\frontend\\src\\index.js",[],[],"D:\\dev\\movies\\frontend\\src\\app\\reportWebVitals.js",[],[],"D:\\dev\\movies\\frontend\\src\\app\\App.js",["84","85","86","87"],[],"// import './index.css';\nimport Main from \"../components/Main\";\nimport Films from \"../components/Films\";\nimport SavedFilms from \"../components/SavedFilms\";\nimport Registration from \"../components/Registration\";\nimport Login from \"../components/Login\";\nimport Error from \"../components/Error\";\nimport Account from \"../components/Account\";\nimport ProtectedRoute from \"../components/ProtectedRoute\";\nimport { React, useEffect, useState } from \"react\";\nimport { Routes, Route, Redirect, useNavigate } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentUser, setСurrentUser] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [savedMovies, setSavedMovies] = useState([]);\n  const [isSideBarOpen, setSideBarOpen] = useState(false);\n  const [isShortFilms, setShortFilms] = useState(\n    localStorage.getItem(\"isShort\") === \"true\"\n  );\n  const [isShortSavedFilms, setShortSavedFilms] = useState(\n    localStorage.getItem(\"isShortSaved\") === \"true\"\n  );\n  // const [isShortSavedFilms, ShortSavedFilms] = useState(\n  //   localStorage.getItem(\"isShortFavorite\") === \"true\"\n  // );\n\n  useEffect(() => {\n    if (window.screen.availWidth <= 1024) {\n      isSideBarOpen(true);\n    }\n    setShortFilms(localStorage.getItem(\"isShort\") === \"true\");\n    if (localStorage.getItem(\"isShort\") === \"true\") {\n      shortFilms();\n    } else {\n      localStorage.setItem(\"isShort\", true);\n      SearchFilter();\n    }\n  }, []);\n\n  const shortFilms = () => {\n    if (isShortFilms === true) {\n      setShortFilms(false);\n      localStorage.setItem(\"isShort\", isShortFilms);\n      SearchFilter();\n    } else {\n      setShortFilms(true);\n      localStorage.setItem(\"isShort\", isShortFilms);\n      SearchFilter();\n    }\n  };\n\n  const SearchSavedFilter = () => {\n    if (JSON.parse(localStorage.getItem(\"SearchFilm\")) === null) {\n      if (isShortSavedFilms) {\n        setSavedMovies(JSON.parse(localStorage.getItem(\"FavoriteMovie\")));\n      } else {\n        setSavedMovies(\n          JSON.parse(localStorage.getItem(\"FavoriteMovie\")).filter(\n            (item) => item.duration <= 40\n          )\n        );\n      }\n    } else {\n      if (isShortSavedFilms) {\n        setSavedMovies(\n          JSON.parse(localStorage.getItem(\"FavoriteMovie\")).filter(\n            (item) =>\n              item.id === JSON.parse(localStorage.getItem(\"SearchFilm\")).id\n          )\n        );\n      } else {\n        setSavedMovies(\n          JSON.parse(localStorage.getItem(\"FavoriteMovie\")).filter(\n            (item) =>\n              item === [JSON.parse(localStorage.getItem(\"SearchFilm\"))] &&\n              item.duration <= 40\n          )\n        );\n      }\n    }\n  };\n\n  const SearchFilter = () => {\n    if (JSON.parse(localStorage.getItem(\"SearchFilm\")) === null) {\n      if (isShortFilms) {\n        setMovies(JSON.parse(localStorage.getItem(\"AllFilms\")));\n      } else {\n        setMovies(JSON.parse(localStorage.getItem(\"ShortFilms\")));\n      }\n    } else {\n      if (isShortFilms) {\n        setMovies([JSON.parse(localStorage.getItem(\"SearchFilm\"))]);\n      } else {\n        setMovies(\n          [JSON.parse(localStorage.getItem(\"SearchFilm\"))].filter(\n            (item) => item.duration <= 40\n          )\n        );\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\" lang=\"ru\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Routes>\n          <Route path=\"/\" element={<Main loggedIn={loggedIn} />}></Route>\n          <Route\n            path=\"/signup\"\n            element={\n              <Registration\n                setСurrentUser={setСurrentUser}\n                setMovies={setMovies}\n                setLoggedIn={setLoggedIn}\n                setSavedMovies={setSavedMovies}\n              />\n            }\n          ></Route>\n          <Route\n            path=\"/signin\"\n            element={\n              <Login\n                setShortFilms={setShortFilms}\n                SearchFilter={SearchFilter}\n                setСurrentUser={setСurrentUser}\n                movies={movies}\n                setMovies={setMovies}\n                setLoggedIn={setLoggedIn}\n                savedMovies={savedMovies}\n                setSavedMovies={setSavedMovies}\n              />\n            }\n          ></Route>\n          <Route path=\"/error\" element={<Error />}></Route>\n          <Route\n            path=\"/movies\"\n            element={\n              <ProtectedRoute\n                element={\n                  <Films\n                    shortFilms={shortFilms}\n                    setShortFilms={setShortFilms}\n                    isShortFilms={isShortFilms}\n                    SearchFilter={SearchFilter}\n                    setSavedMovies={setSavedMovies}\n                    setMovies={setMovies}\n                    // movies2={movies}\n                    movies={movies}\n                    savedMovies={savedMovies}\n                  />\n                }\n                loggedIn={loggedIn}\n              />\n            }\n          ></Route>\n          <Route\n            path=\"/saved-movies\"\n            element={\n              <ProtectedRoute\n                element={\n                  <SavedFilms\n                    setShortSavedFilms={setShortSavedFilms}\n                    isShortSavedFilms={isShortSavedFilms}\n                    SearchSavedFilter={SearchSavedFilter}\n                    setSavedMovies={setSavedMovies}\n                    savedMovies={savedMovies}\n                  />\n                }\n                loggedIn={loggedIn}\n              />\n            }\n          ></Route>\n          <Route\n            path=\"/profile\"\n            element={\n              <ProtectedRoute\n                element={\n                  <Account\n                    setLoggedIn={setLoggedIn}\n                    setСurrentUser={setСurrentUser}\n                  />\n                }\n                loggedIn={loggedIn}\n              />\n            }\n          ></Route>\n        </Routes>\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\dev\\movies\\frontend\\src\\components\\Registration.js",["88","89"],[],"import logo from \"../images/logo.svg\";\r\nimport { Link, withRouter, useNavigate } from \"react-router-dom\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { api } from \"../utils/MainApi\";\r\nimport { apiMovie } from \"../utils/MoviesApi\";\r\n\r\nconst Registration = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [userValue, setUserValue] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setError({ [name]: e.target.validationMessage });\r\n    setUserValue({\r\n      ...userValue,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    api\r\n      .register(userValue.name, userValue.password, userValue.email)\r\n      .then((data) => {\r\n        if (data) {\r\n          api\r\n            .login(userValue.password, userValue.email)\r\n            .then((data) => {\r\n              if (data) {\r\n                Promise.all([api.getProfile(), apiMovie.getMovies()]).then(\r\n                  ([infoResult, moviesResult]) => {\r\n                    props.setСurrentUser({\r\n                      name: infoResult.name,\r\n                      email: infoResult.email,\r\n                      id: infoResult._id,\r\n                    });\r\n                    localStorage.setItem(\r\n                      \"AllFilms\",\r\n                      JSON.stringify(moviesResult.reverse())\r\n                    );\r\n                    localStorage.setItem(\r\n                      \"ShortFilms\",\r\n                      JSON.stringify(\r\n                        moviesResult.filter((item) => item.duration <= 40)\r\n                      )\r\n                    );\r\n                    props.setLoggedIn(true);\r\n                    navigate(\"/movies\");\r\n                  }\r\n                );\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              setError({ password: \"Что-то пошло не так...\" });\r\n            });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className=\"registration\">\r\n      <header className=\"registration__header\">\r\n        <Link to=\"/\" className=\"registration__logo\">\r\n          <img src={logo} alt=\"логотип\" />\r\n        </Link>\r\n      </header>\r\n      <main className=\"registration__main\">\r\n        <h1 className=\"registration__title\">Добро пожаловать!</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <label className=\"registration__label\">\r\n            <p className=\"registration__text\">Имя</p>\r\n            <input\r\n              name=\"name\"\r\n              type=\"name\"\r\n              className=\"registration__input\"\r\n              id=\"name\"\r\n              placeholder=\"\"\r\n              required\r\n              onChange={handleChange}\r\n              value={userValue.name}\r\n            />\r\n            <span id=\"registration__error\" className=\"registration__error\">\r\n              {error.name}\r\n            </span>\r\n          </label>\r\n          <label className=\"registration__label\">\r\n            <p className=\"registration__text\">E-mail</p>\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              className=\"registration__input\"\r\n              id=\"email\"\r\n              placeholder=\"\"\r\n              required\r\n              onChange={handleChange}\r\n              value={userValue.email}\r\n            />\r\n            <span id=\"registration__error\" className=\"registration__error\">\r\n              {error.email}\r\n            </span>\r\n          </label>\r\n          <label className=\"registration__label\">\r\n            <p className=\"registration__text\">Пароль</p>\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              className=\"registration__input\"\r\n              id=\"password\"\r\n              placeholder=\"\"\r\n              required\r\n              onChange={handleChange}\r\n              value={userValue.password}\r\n            />\r\n            <span id=\"registration__error\" className=\"registration__error\">\r\n              {error.password}\r\n            </span>\r\n          </label>\r\n          <button className=\"registration__save-button\">\r\n            Зарегистрироваться\r\n          </button>\r\n        </form>\r\n      </main>\r\n      <footer>\r\n        <Link to=\"/signin\" className=\"registration__content-links\">\r\n          <p className=\"registration__content\">Уже зарегистрированы?</p>\r\n          <p className=\"registration__content\">Войти</p>\r\n        </Link>\r\n      </footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","D:\\dev\\movies\\frontend\\src\\components\\ProtectedRoute.js",[],[],"D:\\dev\\movies\\frontend\\src\\components\\SavedFilms.js",["90","91","92","93","94","95"],[],"import logo from \"../images/logo.svg\";\r\nimport search from \"../images/search.svg\";\r\nimport find from \"../images/find.svg\";\r\nimport closeicon from \"../images/closeIcon.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ico_main from \"../images/ico-main.svg\";\r\nimport ico_exit from \"../images/exit-ico.svg\";\r\nimport { React, useState, useEffect } from \"react\";\r\n\r\nconst SavedFilms = (props) => {\r\n  const [isSideBarOpen, setSideBarOpen] = useState(false);\r\n  const [searchContent, setSearchContent] = useState({\r\n    movie: \"\",\r\n  });\r\n  const [isLoading, setLoading] = useState(false);\r\n  const OpenSideBar = () => {\r\n    setSideBarOpen(true);\r\n  };\r\n  const CloseSideBar = () => {\r\n    setSideBarOpen(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSearchContent({\r\n      [name]: value,\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    if (window.screen.availWidth <= 1024) {\r\n      isSideBarOpen(true);\r\n    }\r\n    // props.setShortSavedFilms(localStorage.getItem(\"isShortSaved\") === \"true\");\r\n    // if (localStorage.getItem(\"isShortSaved\") === \"true\") {\r\n    //   shortFilms();\r\n    //   console.log(1);\r\n    // } else {\r\n    //   localStorage.setItem(\"isShortSaved\", true);\r\n    //   console.log(2);\r\n    //   props.SearchSavedFilter();\r\n    // }\r\n    console.log(localStorage.getItem(\"isShortSaved\") === \"true\");\r\n  }, []);\r\n\r\n  const shortFilms = () => {\r\n    if (props.isShortSavedFilms === false) {\r\n      props.setShortSavedFilms(true);\r\n      localStorage.setItem(\"isShortSaved\", props.isShortSavedFilms);\r\n      props.SearchSavedFilter();\r\n    } else {\r\n      props.setShortSavedFilms(false);\r\n      localStorage.setItem(\"isShortSaved\", props.isShortSavedFilms);\r\n      props.SearchSavedFilter();\r\n    }\r\n  };\r\n\r\n  const searchFilms = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      JSON.parse(localStorage.getItem(\"AllFilms\")).map((obj) => {\r\n        obj.nameRU.split(\" \").some((movie) => {\r\n          if (searchContent.movie.length === 0) {\r\n            localStorage.removeItem(\"SearchFilm\");\r\n            props.SearchSavedFilter();\r\n          } else if (\r\n            movie.toLowerCase() === searchContent.movie.toLowerCase()\r\n          ) {\r\n            localStorage.setItem(\"SearchFilm\", JSON.stringify(obj));\r\n            props.SearchSavedFilter();\r\n          }\r\n        });\r\n      });\r\n      setLoading(false);\r\n    }, 600);\r\n  };\r\n\r\n  const DeleteMovies = (obj) => {\r\n    // props.setSavedMovies(\r\n    //   props.savedMovies.filter((movie) => movie.id !== obj.id)\r\n    // );\r\n    // console.log(props.savedMovies);\r\n    // localStorage.removeItem(\"FavoriteMovie\", obj.id);\r\n    let deletedMovie = props.savedMovies.filter((movie) => movie.id !== obj.id);\r\n    props.setSavedMovies(deletedMovie);\r\n    localStorage.setItem(\"FavoriteMovie\", JSON.stringify(deletedMovie));\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <header>\r\n        <nav className=\"navbar\">\r\n          <Link to=\"/\" className=\"navbar__avatar\">\r\n            <img src={logo} className=\"profile__avatar-img\" alt=\"логотип\" />\r\n          </Link>\r\n          <Link to=\"/movies\" className=\"navbar__films\">\r\n            Фильмы\r\n          </Link>\r\n          <Link to=\"/saved-movies\" className=\"navbar__saved-films\">\r\n            Сохранённые фильмы\r\n          </Link>\r\n          <Link to=\"/profile\" className=\"navbar__account\">\r\n            Аккаунт\r\n          </Link>\r\n          <img\r\n            className=\"navbar__side-ico\"\r\n            src={ico_main}\r\n            onClick={OpenSideBar}\r\n          />\r\n        </nav>\r\n        <nav\r\n          className={\r\n            isSideBarOpen\r\n              ? \"navbar-side navbar-side_active\"\r\n              : \"navbar-side navbar-side_inactive\"\r\n          }\r\n        >\r\n          <div className=\"navbar-side__block\">\r\n            <img\r\n              src={ico_exit}\r\n              className=\"navbar-side__exit\"\r\n              onClick={CloseSideBar}\r\n            />\r\n            <div className=\"navbar-side__text-block\">\r\n              <Link to=\"/\" className=\"navbar-side__text\">\r\n                Главная\r\n              </Link>\r\n              <Link to=\"/movies\" className=\"navbar-side__text\">\r\n                Фильмы\r\n              </Link>\r\n              <Link to=\"/saved-movies\" className=\"navbar-side__text\">\r\n                Сохранённые фильмы\r\n              </Link>\r\n              <Link to=\"/profile\" className=\"navbar-side__text\">\r\n                Аккаунт\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        <section className=\"search\">\r\n          <form className=\"search__label\">\r\n            <img src={search} className=\"search__icon\" alt=\"иконка поиска\" />\r\n            <input\r\n              name=\"movie\"\r\n              onChange={handleChange}\r\n              type=\"search\"\r\n              value={searchContent.movie}\r\n              className=\"search__films\"\r\n              placeholder=\"Фильм\"\r\n              required\r\n            />\r\n            <button\r\n              src={find}\r\n              onClick={searchFilms}\r\n              className=\"search__button\"\r\n              alt=\"кнопка искать\"\r\n            >\r\n              <img\r\n                src={find}\r\n                className=\"search__button_img\"\r\n                alt=\"кнопка искать\"\r\n              ></img>\r\n            </button>\r\n            <label className=\"search__checkbox\">\r\n              <input\r\n                onChange={() => shortFilms()}\r\n                className=\"search__checkbox_input\"\r\n                type=\"checkbox\"\r\n                id=\"checkbox\"\r\n              />\r\n            </label>\r\n            <p className=\"search__checkbox-text\">Короткометражки</p>\r\n            <span id=\"url-error\" className=\"search__error\"></span>\r\n          </form>\r\n        </section>\r\n        <section className=\"films\">\r\n          {props.savedMovies.map((obj, i) => (\r\n            <div key={obj.id} className=\"films__block\">\r\n              <p className=\"films__text-block\">{obj.nameRU}</p>\r\n              <p className=\"films__time-block\">\r\n                {Math.floor(obj.duration / 60) > 0\r\n                  ? Math.floor(obj.duration / 60) +\r\n                    \" час \" +\r\n                    (obj.duration % 60) +\r\n                    \" минут\"\r\n                  : (obj.duration % 60) + \" минут\"}\r\n              </p>\r\n              <button\r\n                className=\"films__ico-block\"\r\n                onClick={() => DeleteMovies(obj)}\r\n              >\r\n                <img\r\n                  className=\"films__ico-block_img\"\r\n                  src={closeicon}\r\n                  alt=\"иконка-удалить\"\r\n                />\r\n              </button>\r\n              <img\r\n                className=\"films__img-block\"\r\n                src={\"https://api.nomoreparties.co/\" + obj.image.url}\r\n                alt=\"изображение фильма\"\r\n              />\r\n            </div>\r\n          ))}\r\n        </section>\r\n      </main>\r\n      <footer className=\"footer\">\r\n        <p className=\"footer__title\">\r\n          Учебный проект Яндекс.Практикум х BeatFilm.\r\n        </p>\r\n        <div className=\"footer__line\"></div>\r\n        <div className=\"footer__info\">\r\n          <div className=\"footer__info-year\">\r\n            <p>© 2023</p>\r\n          </div>\r\n          <div className=\"footer__info-other\">\r\n            <p>Яндекс.Практикум</p>\r\n            <p>Github</p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SavedFilms;\r\n","D:\\dev\\movies\\frontend\\src\\components\\Error.js",[],[],"D:\\dev\\movies\\frontend\\src\\components\\Login.js",["96","97","98","99","100"],[],"import logo from \"../images/logo.svg\";\r\nimport { Link, withRouter, useNavigate } from \"react-router-dom\";\r\nimport { React, useEffect, useState, useContext } from \"react\";\r\nimport { api } from \"../utils/MainApi\";\r\nimport { apiMovie } from \"../utils/MoviesApi\";\r\n\r\nconst Login = (props) => {\r\n  const navigate = useNavigate();\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [isValid, setValid] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [userValue, setUserValue] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setError({ [name]: e.target.validationMessage });\r\n    setUserValue({\r\n      ...userValue,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const login = () => {\r\n    Promise.all([api.getProfile(), apiMovie.getMovies()])\r\n      .then(([infoResult, moviesResult]) => {\r\n        props.setСurrentUser({\r\n          name: infoResult.name,\r\n          email: infoResult.email,\r\n          id: infoResult._id,\r\n        });\r\n        localStorage.setItem(\r\n          \"AllFilms\",\r\n          JSON.stringify(moviesResult.reverse())\r\n        );\r\n        localStorage.setItem(\r\n          \"ShortFilms\",\r\n          JSON.stringify(moviesResult.filter((item) => item.duration <= 40))\r\n        );\r\n        props.setLoggedIn(true);\r\n        navigate(\"/movies\");\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.log(`Вы неавторизованы ${err}`);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    login();\r\n    // props.setShortFilms(localStorage.getItem(\"isShort\") === \"true\");\r\n    // console.log(localStorage.getItem(\"isShort\") === \"true\");\r\n    if (JSON.parse(localStorage.getItem(\"isShort\")) === null) {\r\n      localStorage.setItem(\"isShort\", false);\r\n    }\r\n    // if (JSON.parse(localStorage.getItem(\"isShortSaved\")) === null) {\r\n    //   localStorage.setItem(\"isShortSaved\", false);\r\n    // }\r\n    if (JSON.parse(localStorage.getItem(\"FavoriteMovie\")) !== null) {\r\n      props.setSavedMovies(JSON.parse(localStorage.getItem(\"FavoriteMovie\")));\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    api\r\n      .login(userValue.password, userValue.email)\r\n      .then((data) => {\r\n        if (data) {\r\n          props.setShortFilms(false);\r\n          localStorage.setItem(\"isShort\", false);\r\n          login();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setError({ password: \"Что-то пошло не так...\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className=\"registration\">\r\n      <section className={isLoading ? \"preloader\" : \"preloader_hiden\"}>\r\n        <div className=\"preloader__loader\">\r\n          <div className={isLoading ? \"preloader__box\" : \"preloader_hiden\"}>\r\n            <div\r\n              className={isLoading ? \"preloader__spinner\" : \"preloader_hiden\"}\r\n            >\r\n              <div></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <header className=\"registration__header\">\r\n        <Link to=\"/\" className=\"registration__logo\">\r\n          <img src={logo} alt=\"логотип\" />\r\n        </Link>\r\n      </header>\r\n      <main className=\"registration__main\">\r\n        <h1 className=\"registration__title\">Рады видеть!</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <label className=\"registration__label\">\r\n            <p className=\"registration__text\">E-mail</p>\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              className=\"registration__input\"\r\n              id=\"Email\"\r\n              placeholder=\"\"\r\n              required\r\n              onChange={handleChange}\r\n              value={userValue.email}\r\n            />\r\n            <span id=\"registration__error\" className=\"registration__error\">\r\n              {error.email}\r\n            </span>\r\n          </label>\r\n          <label className=\"registration__label\">\r\n            <p className=\"registration__text\">Пароль</p>\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              className=\"registration__input\"\r\n              id=\"password\"\r\n              placeholder=\"\"\r\n              required\r\n              onChange={handleChange}\r\n              value={userValue.password}\r\n            />\r\n            <span id=\"registration__error\" className=\"registration__error\">\r\n              {error.password}\r\n            </span>\r\n          </label>\r\n          <button className=\"registration__save-button\">Войти</button>\r\n        </form>\r\n      </main>\r\n      <footer>\r\n        <Link to=\"/signup\" className=\"registration__content-links\">\r\n          <p className=\"registration__content\">Ещё не зарегистрированы?</p>\r\n          <p className=\"registration__content\">Регистрация</p>\r\n        </Link>\r\n      </footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\dev\\movies\\frontend\\src\\components\\Films.js",["101","102","103","104","105","106","107"],[],"import logo from \"../images/logo.svg\";\r\nimport search from \"../images/search.svg\";\r\nimport find from \"../images/find.svg\";\r\nimport ico_main from \"../images/ico-main.svg\";\r\nimport ico_exit from \"../images/exit-ico.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { React, useEffect, useState, useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport FavoriteButton from \"../components/FavoriteButton\";\r\n\r\nconst Films = (props) => {\r\n  const userContext = useContext(CurrentUserContext);\r\n  const [searchContent, setSearchContent] = useState({\r\n    movie: \"\",\r\n  });\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [isSideBarOpen, setSideBarOpen] = useState(false);\r\n\r\n  const [moviesCount, setmoviesCount] = useState([]);\r\n  const [moreCount, setmoreCount] = useState(0);\r\n  const [moreButtonClass, setmoreButtonClass] = useState(\"more__button\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSearchContent({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const setmoreCountFunc = () => {\r\n    setmoreCount(moreCount + 1);\r\n  };\r\n  const OpenSideBar = () => {\r\n    setSideBarOpen(true);\r\n  };\r\n  const CloseSideBar = () => {\r\n    setSideBarOpen(false);\r\n  };\r\n\r\n  const searchFilms = (e) => {\r\n    e.preventDefault();\r\n    localStorage.setItem(\"SearchInput\", JSON.stringify(searchContent));\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      JSON.parse(localStorage.getItem(\"AllFilms\")).map((obj) => {\r\n        obj.nameRU.split(\" \").some((movie) => {\r\n          if (searchContent.movie.length === 0) {\r\n            localStorage.removeItem(\"SearchFilm\");\r\n            props.SearchFilter();\r\n          } else if (\r\n            movie.toLowerCase() === searchContent.movie.toLowerCase()\r\n          ) {\r\n            localStorage.setItem(\"SearchFilm\", JSON.stringify(obj));\r\n\r\n            props.SearchFilter();\r\n          }\r\n        });\r\n      });\r\n      setLoading(false);\r\n    }, 600);\r\n  };\r\n\r\n  // const shortFilms = () => {\r\n  //   console.log(\"gdgdgdg\");\r\n  //   if (props.isShortFilms === true) {\r\n  //     props.setShortFilms(false);\r\n  //     localStorage.setItem(\"isShort\", props.isShortFilms);\r\n  //     props.SearchFilter();\r\n  //   } else {\r\n  //     props.setShortFilms(true);\r\n  //     localStorage.setItem(\"isShort\", props.isShortFilms);\r\n  //     props.SearchFilter();\r\n  //     setmoreButtonClass(\"more__button\");\r\n  //   }\r\n  // };localStorage.getItem(\"SearchFilm\")\r\n\r\n  const MoviesRemoveFavorite = (obj, setLike) => {\r\n    setLoading(true);\r\n    let deletedMovie = props.savedMovies.filter((movie) => movie.id !== obj.id);\r\n    props.setSavedMovies(deletedMovie);\r\n    localStorage.setItem(\"FavoriteMovie\", JSON.stringify(deletedMovie));\r\n    setLike(false);\r\n    setLoading(false);\r\n  };\r\n\r\n  const MoviesToFavorite = (obj, setLike) => {\r\n    console.log(obj);\r\n    if (\r\n      localStorage.getItem(\"FavoriteMovie\") !== null &&\r\n      props.savedMovies !== null &&\r\n      !props.savedMovies.some((movies) => movies.id === obj.id)\r\n    ) {\r\n      let str = JSON.parse(localStorage.getItem(\"FavoriteMovie\"));\r\n      str.push(obj);\r\n      console.log(str);\r\n      localStorage.setItem(\"FavoriteMovie\", JSON.stringify(str));\r\n      props.setSavedMovies(JSON.parse(localStorage.getItem(\"FavoriteMovie\")));\r\n      setLike(true);\r\n    } else if (localStorage.getItem(\"FavoriteMovie\") === null) {\r\n      localStorage.setItem(\"FavoriteMovie\", JSON.stringify([obj]));\r\n      props.setSavedMovies(JSON.parse(localStorage.getItem(\"FavoriteMovie\")));\r\n      setLike(true);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const GetMovie = (movies) => {\r\n    if (window.screen.availWidth >= 1280) {\r\n      setmoviesCount(movies.slice(0, 12 + moreCount * 3));\r\n    } else if (\r\n      window.screen.availWidth < 1280 &&\r\n      window.screen.availWidth >= 768\r\n    ) {\r\n      setmoviesCount(movies.slice(0, 8 + moreCount * 2));\r\n    } else {\r\n      setmoviesCount(movies.slice(0, 5 + moreCount * 2));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearchContent(JSON.parse(localStorage.getItem(\"SearchInput\")));\r\n    GetMovie(props.movies);\r\n    setmoreButtonClass(\"more__button\");\r\n    if (props.movies.length <= 12 + moreCount * 3) {\r\n      setmoreButtonClass(\"more__button_vanished\");\r\n    }\r\n  }, [moreCount, props.movies, props.savedMovies, props.isShortFilms]);\r\n\r\n  return (\r\n    <section>\r\n      <header>\r\n        <nav className=\"navbar\">\r\n          <Link to=\"/\" className=\"navbar__avatar\">\r\n            <img src={logo} className=\"profile__avatar-img\" alt=\"логотип\" />\r\n          </Link>\r\n          <Link to=\"/movies\" className=\"navbar__films\">\r\n            Фильмы\r\n          </Link>\r\n          <Link to=\"/saved-movies\" className=\"navbar__saved-films\">\r\n            Сохранённые фильмы\r\n          </Link>\r\n          <Link to=\"/profile\" className=\"navbar__account\">\r\n            Аккаунт\r\n          </Link>\r\n          <img\r\n            className=\"navbar__side-ico\"\r\n            src={ico_main}\r\n            onClick={OpenSideBar}\r\n          />\r\n        </nav>\r\n        <nav\r\n          className={\r\n            isSideBarOpen\r\n              ? \"navbar-side navbar-side_active\"\r\n              : \"navbar-side navbar-side_inactive\"\r\n          }\r\n        >\r\n          <div className=\"navbar-side__block\">\r\n            <img\r\n              src={ico_exit}\r\n              className=\"navbar-side__exit\"\r\n              onClick={CloseSideBar}\r\n            />\r\n            <div className=\"navbar-side__text-block\">\r\n              <Link to=\"/\" className=\"navbar-side__text\">\r\n                Главная\r\n              </Link>\r\n              <Link to=\"/movies\" className=\"navbar-side__text\">\r\n                Фильмы\r\n              </Link>\r\n              <Link to=\"/saved-movies\" className=\"navbar-side__text\">\r\n                Сохранённые фильмы\r\n              </Link>\r\n              <Link to=\"/profile\" className=\"navbar-side__text\">\r\n                Аккаунт\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        <section className={isLoading ? \"preloader\" : \"preloader_hiden\"}>\r\n          <div className=\"preloader__loader\">\r\n            <div className={isLoading ? \"preloader__box\" : \"preloader_hiden\"}>\r\n              <div\r\n                className={isLoading ? \"preloader__spinner\" : \"preloader_hiden\"}\r\n              >\r\n                <div></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"search\">\r\n          <form className=\"search__label\">\r\n            <img src={search} className=\"search__icon\" alt=\"иконка поиска\" />\r\n            <input\r\n              name=\"movie\"\r\n              onChange={handleChange}\r\n              type=\"search\"\r\n              value={searchContent.movie}\r\n              className=\"search__films\"\r\n              placeholder=\"Фильм\"\r\n              required\r\n            />\r\n            <button\r\n              src={find}\r\n              onClick={searchFilms}\r\n              className=\"search__button\"\r\n              alt=\"кнопка искать\"\r\n            >\r\n              <img\r\n                src={find}\r\n                className=\"search__button_img\"\r\n                alt=\"кнопка искать\"\r\n              ></img>\r\n            </button>\r\n            <label className=\"search__checkbox\">\r\n              <input\r\n                checked={props.isShortFilms}\r\n                onChange={() => {\r\n                  props.shortFilms();\r\n                }}\r\n                className=\"search__checkbox_input\"\r\n                type=\"checkbox\"\r\n                id=\"checkbox\"\r\n              />\r\n            </label>\r\n            <p className=\"search__checkbox-text\">Короткометражки</p>\r\n            <span id=\"url-error\" className=\"search__error\"></span>\r\n          </form>\r\n        </section>\r\n        <section className=\"films\">\r\n          {moviesCount.map((obj, i) => (\r\n            <div key={obj.id} className=\"films__block\">\r\n              <p className=\"films__text-block\">{obj.nameRU}</p>\r\n              <p className=\"films__time-block\">\r\n                {Math.floor(obj.duration / 60) > 0\r\n                  ? Math.floor(obj.duration / 60) +\r\n                    \" час \" +\r\n                    (obj.duration % 60) +\r\n                    \" минут\"\r\n                  : (obj.duration % 60) + \" минут\"}\r\n              </p>\r\n              <FavoriteButton\r\n                MoviesRemoveFavorite={MoviesRemoveFavorite}\r\n                savedMovies={props.savedMovies}\r\n                obj={obj}\r\n                MoviesToFavorite={MoviesToFavorite}\r\n              />\r\n              <a\r\n                href={obj.trailerLink}\r\n                target=\"_blank\"\r\n                className=\"films__img-block_link\"\r\n              >\r\n                <img\r\n                  className=\"films__img-block\"\r\n                  src={\"https://api.nomoreparties.co/\" + obj.image.url}\r\n                  alt=\"изображение фильма\"\r\n                />\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </section>\r\n        <section className=\"more\">\r\n          <button\r\n            className={moreButtonClass}\r\n            onClick={() => setmoreCountFunc()}\r\n          >\r\n            Ещё\r\n          </button>\r\n        </section>\r\n      </main>\r\n      <footer className=\"footer\">\r\n        <p className=\"footer__title\">\r\n          Учебный проект Яндекс.Практикум х BeatFilm.\r\n        </p>\r\n        <div className=\"footer__line\"></div>\r\n        <div className=\"footer__info\">\r\n          <div className=\"footer__info-year\">\r\n            <p>© 2023</p>\r\n          </div>\r\n          <div className=\"footer__info-other\">\r\n            <p>Яндекс.Практикум</p>\r\n            <p>Github</p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Films;\r\n","D:\\dev\\movies\\frontend\\src\\contexts\\CurrentUserContext.js",[],[],"D:\\dev\\movies\\frontend\\src\\components\\Main.js",["108","109","110","111","112","113","114","115","116","117","118","119","120"],[],"import logo from \"../images/logo.svg\";\r\nimport link from \"../images/link.svg\";\r\nimport me from \"../images/me.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { React, useState } from \"react\";\r\nconst Main = (props) => {\r\n  const [isSideBarOpen, setSideBarOpen] = useState(false);\r\n\r\n  const OpenSideBar = () => {\r\n    setSideBarOpen(true);\r\n  };\r\n  const CloseSideBar = () => {\r\n    setSideBarOpen(false);\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <header>\r\n        <nav className=\"navbar\">\r\n          <Link to=\"/\" className=\"navbar__avatar\">\r\n            <img src={logo} className=\"profile__avatar-img\" alt=\"логотип\" />\r\n          </Link>\r\n          {props.loggedIn ? (\r\n            <Link to=\"/movies\" className=\"navbar__films\">\r\n              Фильмы\r\n            </Link>\r\n          ) : (\r\n            <Link to=\"signup\" className=\"navbar__registration\">\r\n              Регистрация\r\n            </Link>\r\n          )}\r\n          {props.loggedIn ? (\r\n            <Link to=\"/saved-movies\" className=\"navbar__saved-films\">\r\n              Сохранённые\r\n            </Link>\r\n          ) : (\r\n            <Link to=\"signin\" className=\"navbar__login\">\r\n              <p className=\"navbar__login_text\">Войти</p>\r\n            </Link>\r\n          )}\r\n          {props.loggedIn ? (\r\n            <Link to=\"/profile\" className=\"navbar__account\">\r\n              Аккаунт\r\n            </Link>\r\n          ) : (\r\n            <Link to=\"signin\" className=\"navbar__login\">\r\n              <p className=\"navbar__login_text\">Войти</p>\r\n            </Link>\r\n          )}\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        <section className=\"info\">\r\n          <h1 className=\"info__title\">\r\n            Учебный проект студента факультета Веб-разработки.\r\n          </h1>\r\n          <div className=\"info__links\">\r\n            <button className=\"info__link\">О проекте</button>\r\n            <button className=\"info__link\">Технологии</button>\r\n            <button className=\"info__link\">Студент</button>\r\n            {/* <a >О проекте</a>\r\n                    <a className=\"info__link\">Технологии</a>\r\n                    <a className=\"info__link\">Студент</a> */}\r\n          </div>\r\n        </section>\r\n        <section className=\"time-info\">\r\n          <h2 className=\"time-info__title\">О проекте</h2>\r\n          <div className=\"time-info__block-for-text\">\r\n            <div className=\"time-info__text\">\r\n              <h3 className=\"time-info__text_title\">\r\n                Дипломный проект включал 5 этапов\r\n              </h3>\r\n              <p className=\"time-info__text_subtitle\">\r\n                Составление плана, работу над бэкендом, вёрстку, добавление\r\n                функциональности и финальные доработки.\r\n              </p>\r\n            </div>\r\n            <div className=\"time-info__text\">\r\n              <h3 className=\"time-info__text_title\">\r\n                На выполнение диплома ушло 5 недель\r\n              </h3>\r\n              <p className=\"time-info__text_subtitle\">\r\n                У каждого этапа был мягкий и жёсткий дедлайн, которые нужно было\r\n                соблюдать, чтобы успешно защититься.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"time-info__time-line\">\r\n            <h4 className=\"time-info__backend-part\">1 неделя</h4>\r\n            <p className=\"time-info__backend-part_text\">Back-end</p>\r\n            <h4 className=\"time-info__frontend-part\">4 недели</h4>\r\n            <p className=\"time-info__frontend-part_text\">Front-end</p>\r\n          </div>\r\n        </section>\r\n        <section className=\"technologies\">\r\n          <p className=\"technologies__title\">Технологии</p>\r\n          <div className=\"technologies__main-text\">7 технологий</div>\r\n          <div className=\"technologies__text\">\r\n            На курсе веб-разработки мы освоили технологии, которые применили в\r\n            дипломном проекте.\r\n          </div>\r\n          <div className=\"technologies__links\">\r\n            <div className=\"technologies__link\">\r\n              <a className=\"technologies__link_text\">HTML</a>\r\n            </div>\r\n            <div className=\"technologies__link\">\r\n              <a className=\"technologies__link_text\">CSS</a>\r\n            </div>\r\n            <div className=\"technologies__link\">\r\n              <a className=\"technologies__link_text\">JS</a>\r\n            </div>\r\n            <div className=\"technologies__link\">\r\n              <a className=\"technologies__link_text\">React</a>\r\n            </div>\r\n            <div className=\"technologies__link\">\r\n              <a className=\"technologies__link_text\">Git</a>\r\n            </div>\r\n            <div className=\"technologies__link\">\r\n              <a className=\"technologies__link_text\">Express.js</a>\r\n            </div>\r\n            <div className=\"technologies__link\">\r\n              <a className=\"technologies__link_text\">mongoDB</a>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"student\">\r\n          <p className=\"student__title\">Студент</p>\r\n          <div className=\"student__about-me\">\r\n            <h5 className=\"student__name\">Алексей</h5>\r\n            <p className=\"student__age-and-profession\">\r\n              будущий фронтенд-разработчик, 17 лет\r\n            </p>\r\n            <p className=\"student__main-info\">\r\n              Я родился и живу в Волгограле, учусь в 11 классе. Я люблю слушать\r\n              музыку, а ещё увлекаюсь бегом. Недавно начал кодить. После того,\r\n              как прошёл курс по веб-разработке, решил, что хочу стать\r\n              веб-разработчиком.\r\n            </p>\r\n            <p className=\"student__git-link\">Github</p>\r\n            <img className=\"student__image\" src={me} alt=\"изображение меня\" />\r\n          </div>\r\n        </section>\r\n        <section className=\"portfolio\">\r\n          <p className=\"portfolio__title\">Портфолио</p>\r\n          <div className=\"portfolio__links\">\r\n            <a\r\n              href=\"https://github.com/RLYamakasi/how-to-learn\"\r\n              className=\"portfolio__link\"\r\n              target=\"_blank\"\r\n            >\r\n              <p className=\"portfolio__link_text\">Статичный сайт</p>\r\n              <img\r\n                className=\"portfolio__link_img\"\r\n                src={link}\r\n                alt=\"иконка-ссылка Статичный сайт\"\r\n              />\r\n            </a>\r\n            <a\r\n              href=\"https://github.com/RLYamakasi/russian-travel\"\r\n              className=\"portfolio__link\"\r\n              target=\"_blank\"\r\n            >\r\n              <p className=\"portfolio__link_text\">Адаптивный сайт</p>\r\n              <img\r\n                className=\"portfolio__link_img\"\r\n                src={link}\r\n                alt=\"иконка-ссылка Адаптивный сайт\"\r\n              />\r\n            </a>\r\n            <a\r\n              href=\"https://github.com/RLYamakasi/react-mesto-api-full\"\r\n              className=\"portfolio__link\"\r\n              target=\"_blank\"\r\n            >\r\n              <p className=\"portfolio__link_text\">Одностраничное приложение</p>\r\n              <img\r\n                className=\"portfolio__link_img\"\r\n                src={link}\r\n                alt=\"иконка-ссылка Одностраничное приложение\"\r\n              />\r\n            </a>\r\n          </div>\r\n        </section>\r\n      </main>\r\n      <footer className=\"footer\">\r\n        <p className=\"footer__title\">\r\n          Учебный проект Яндекс.Практикум х BeatFilm.\r\n        </p>\r\n        <div className=\"footer__info\">\r\n          <div className=\"footer__info-year\">\r\n            <p>© 2023</p>\r\n          </div>\r\n          <div className=\"footer__info-other\">\r\n            <p>Яндекс.Практикум</p>\r\n            <p>Github</p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","D:\\dev\\movies\\frontend\\src\\components\\Account.js",["121","122","123","124"],[],"import logo from \"../images/logo.svg\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport { api } from \"../utils/MainApi\";\r\nimport { React, useContext, useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport ico_main from \"../images/ico-main.svg\";\r\nimport ico_exit from \"../images/exit-ico.svg\";\r\nimport ico_popUp from \"../images/check.png\";\r\nconst Account = (props) => {\r\n  const userContext = useContext(CurrentUserContext);\r\n  const [isSideBarOpen, setSideBarOpen] = useState(false);\r\n  const [popUpOpen, setPopUpOpen] = useState(false);\r\n  const [isButtonActive, setButtonActive] = useState(false);\r\n  const [userValue, setUserValue] = useState({\r\n    email: userContext.email,\r\n    name: userContext.name,\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n  });\r\n  const [isValid, setIsValid] = useState({\r\n    email: true,\r\n    name: true,\r\n  });\r\n  useEffect(() => {\r\n    if (\r\n      (userContext.name !== userValue.name ||\r\n        userContext.email !== userValue.email) &&\r\n      isValid.name &&\r\n      isValid.email\r\n    ) {\r\n      setButtonActive(true);\r\n    } else {\r\n      setButtonActive(false);\r\n    }\r\n  }, [userValue]);\r\n\r\n  const handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    setUserValue({ ...userValue, [name]: value });\r\n    setErrors({ ...errors, [name]: target.validationMessage });\r\n    setIsValid({ ...isValid, [name]: target.closest(\"form\").checkValidity() });\r\n  };\r\n\r\n  const OpenSideBar = () => {\r\n    setSideBarOpen(true);\r\n  };\r\n  const CloseSideBar = () => {\r\n    setSideBarOpen(false);\r\n  };\r\n  const editProfile = (name, email) => {\r\n    api.patchProfile(name, email).then(() => {\r\n      setPopUpOpen(true);\r\n      setTimeout(() => {\r\n        setPopUpOpen(false);\r\n      }, 3000);\r\n      console.log(popUpOpen);\r\n      props.setСurrentUser({\r\n        ...userContext,\r\n        name,\r\n        email,\r\n      });\r\n      setButtonActive(false);\r\n    });\r\n  };\r\n  const navigate = useNavigate();\r\n  const logout = () => {\r\n    api\r\n      .clearCookie()\r\n      .then((data) => {\r\n        if (data) {\r\n          navigate(\"/\");\r\n          localStorage.removeItem(\"SearchFilm\");\r\n          localStorage.removeItem(\"isShort\");\r\n          localStorage.removeItem(\"FavoriteMovie\");\r\n          localStorage.removeItem(\"AllFilms\");\r\n          localStorage.removeItem(\"ShortFilms\");\r\n          props.setLoggedIn(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <div className={popUpOpen ? \"pop-up\" : \"pop-up_hiden\"}>\r\n        <div className=\"pop-up__block\">\r\n          <img className=\"pop-up__img\" src={ico_popUp} />\r\n          <p>Успешно</p>\r\n        </div>\r\n      </div>\r\n      <header>\r\n        <nav className=\"navbar\">\r\n          <Link to=\"/\" className=\"navbar__avatar\">\r\n            <img src={logo} className=\"profile__avatar-img\" alt=\"логотип\" />\r\n          </Link>\r\n          <Link to=\"/movies\" className=\"navbar__films\">\r\n            Фильмы\r\n          </Link>\r\n          <Link to=\"/saved-movies\" className=\"navbar__saved-films\">\r\n            Сохранённые фильмы\r\n          </Link>\r\n          <Link to=\"/profile\" className=\"navbar__account\">\r\n            Аккаунт\r\n          </Link>\r\n          <img\r\n            className=\"navbar__side-ico\"\r\n            src={ico_main}\r\n            onClick={OpenSideBar}\r\n          />\r\n        </nav>\r\n        <nav\r\n          className={\r\n            isSideBarOpen\r\n              ? \"navbar-side navbar-side_active\"\r\n              : \"navbar-side navbar-side_inactive\"\r\n          }\r\n        >\r\n          <div className=\"navbar-side__block\">\r\n            <img\r\n              src={ico_exit}\r\n              className=\"navbar-side__exit\"\r\n              onClick={CloseSideBar}\r\n            />\r\n            <div className=\"navbar-side__text-block\">\r\n              <Link to=\"/\" className=\"navbar-side__text\">\r\n                Главная\r\n              </Link>\r\n              <Link to=\"/movies\" className=\"navbar-side__text\">\r\n                Фильмы\r\n              </Link>\r\n              <Link to=\"/saved-movies\" className=\"navbar-side__text\">\r\n                Сохранённые фильмы\r\n              </Link>\r\n              <Link to=\"/profile\" className=\"navbar-side__text\">\r\n                Аккаунт\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        <section className=\"account\">\r\n          <div className=\"account__block\">\r\n            <h1 className=\"account__title\">Привет, {userContext.name}!</h1>\r\n            <p className=\"account__block-error\">{errors.name}</p>\r\n            <div className=\"account__block-name\">\r\n              <p className=\"account__block-name_text\">Имя</p>\r\n              <form className=\"account__label\">\r\n                <input\r\n                  name=\"name\"\r\n                  type=\"name\"\r\n                  className=\"account__input\"\r\n                  id=\"name\"\r\n                  placeholder=\"\"\r\n                  required\r\n                  onChange={handleChange}\r\n                  value={userValue.name}\r\n                />\r\n              </form>\r\n            </div>\r\n            <p className=\"account__block-error\">{errors.email}</p>\r\n            <div className=\"account__block-email\">\r\n              <p className=\"account__block-email_text\">E-mail</p>\r\n              <form className=\"account__label\">\r\n                <input\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  className=\"account__input\"\r\n                  id=\"email\"\r\n                  placeholder=\"\"\r\n                  required\r\n                  onChange={handleChange}\r\n                  value={userValue.email}\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <p\r\n            className={\r\n              isButtonActive ? \"account__content\" : \"account__content_unactive\"\r\n            }\r\n            onClick={() => editProfile(userValue.name, userValue.email)}\r\n          >\r\n            Редактировать\r\n          </p>\r\n          <p className=\"account__content\" onClick={logout}>\r\n            Выйти из аккаунта\r\n          </p>\r\n        </section>\r\n      </main>\r\n      <footer></footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","D:\\dev\\movies\\frontend\\src\\utils\\MainApi.js",[],[],"D:\\dev\\movies\\frontend\\src\\utils\\MoviesApi.js",[],[],"D:\\dev\\movies\\frontend\\src\\components\\FavoriteButton.js",[],[],{"ruleId":"125","severity":1,"message":"126","line":11,"column":25,"nodeType":"127","messageId":"128","endLine":11,"endColumn":33},{"ruleId":"125","severity":1,"message":"129","line":11,"column":35,"nodeType":"127","messageId":"128","endLine":11,"endColumn":46},{"ruleId":"125","severity":1,"message":"130","line":19,"column":25,"nodeType":"127","messageId":"128","endLine":19,"endColumn":39},{"ruleId":"131","severity":1,"message":"132","line":41,"column":6,"nodeType":"133","endLine":41,"endColumn":8,"suggestions":"134"},{"ruleId":"125","severity":1,"message":"135","line":2,"column":16,"nodeType":"127","messageId":"128","endLine":2,"endColumn":26},{"ruleId":"125","severity":1,"message":"136","line":3,"column":17,"nodeType":"127","messageId":"128","endLine":3,"endColumn":26},{"ruleId":"125","severity":1,"message":"137","line":15,"column":10,"nodeType":"127","messageId":"128","endLine":15,"endColumn":19},{"ruleId":"131","severity":1,"message":"138","line":43,"column":6,"nodeType":"133","endLine":43,"endColumn":8,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":61,"column":62,"nodeType":"142","messageId":"143","endLine":61,"endColumn":64},{"ruleId":"140","severity":1,"message":"144","line":62,"column":44,"nodeType":"142","messageId":"143","endLine":62,"endColumn":46},{"ruleId":"145","severity":1,"message":"146","line":105,"column":11,"nodeType":"147","endLine":109,"endColumn":13},{"ruleId":"145","severity":1,"message":"146","line":119,"column":13,"nodeType":"147","endLine":123,"endColumn":15},{"ruleId":"125","severity":1,"message":"135","line":2,"column":16,"nodeType":"127","messageId":"128","endLine":2,"endColumn":26},{"ruleId":"125","severity":1,"message":"148","line":3,"column":38,"nodeType":"127","messageId":"128","endLine":3,"endColumn":48},{"ruleId":"125","severity":1,"message":"149","line":10,"column":10,"nodeType":"127","messageId":"128","endLine":10,"endColumn":17},{"ruleId":"125","severity":1,"message":"150","line":10,"column":19,"nodeType":"127","messageId":"128","endLine":10,"endColumn":27},{"ruleId":"131","severity":1,"message":"151","line":72,"column":6,"nodeType":"133","endLine":72,"endColumn":8,"suggestions":"152"},{"ruleId":"125","severity":1,"message":"153","line":12,"column":9,"nodeType":"127","messageId":"128","endLine":12,"endColumn":20},{"ruleId":"140","severity":1,"message":"141","line":45,"column":62,"nodeType":"142","messageId":"143","endLine":45,"endColumn":64},{"ruleId":"140","severity":1,"message":"144","line":46,"column":44,"nodeType":"142","messageId":"143","endLine":46,"endColumn":46},{"ruleId":"131","severity":1,"message":"154","line":128,"column":6,"nodeType":"133","endLine":128,"endColumn":70,"suggestions":"155"},{"ruleId":"145","severity":1,"message":"146","line":146,"column":11,"nodeType":"147","endLine":150,"endColumn":13},{"ruleId":"145","severity":1,"message":"146","line":160,"column":13,"nodeType":"147","endLine":164,"endColumn":15},{"ruleId":"156","severity":1,"message":"157","line":251,"column":15,"nodeType":"147","messageId":"158","endLine":255,"endColumn":16,"fix":"159"},{"ruleId":"125","severity":1,"message":"160","line":7,"column":10,"nodeType":"127","messageId":"128","endLine":7,"endColumn":23},{"ruleId":"125","severity":1,"message":"161","line":9,"column":9,"nodeType":"127","messageId":"128","endLine":9,"endColumn":20},{"ruleId":"125","severity":1,"message":"162","line":12,"column":9,"nodeType":"127","messageId":"128","endLine":12,"endColumn":21},{"ruleId":"163","severity":1,"message":"164","line":104,"column":15,"nodeType":"147","endLine":104,"endColumn":54},{"ruleId":"163","severity":1,"message":"164","line":107,"column":15,"nodeType":"147","endLine":107,"endColumn":54},{"ruleId":"163","severity":1,"message":"164","line":110,"column":15,"nodeType":"147","endLine":110,"endColumn":54},{"ruleId":"163","severity":1,"message":"164","line":113,"column":15,"nodeType":"147","endLine":113,"endColumn":54},{"ruleId":"163","severity":1,"message":"164","line":116,"column":15,"nodeType":"147","endLine":116,"endColumn":54},{"ruleId":"163","severity":1,"message":"164","line":119,"column":15,"nodeType":"147","endLine":119,"endColumn":54},{"ruleId":"163","severity":1,"message":"164","line":122,"column":15,"nodeType":"147","endLine":122,"endColumn":54},{"ruleId":"156","severity":1,"message":"157","line":146,"column":13,"nodeType":"147","messageId":"158","endLine":150,"endColumn":14,"fix":"165"},{"ruleId":"156","severity":1,"message":"157","line":158,"column":13,"nodeType":"147","messageId":"158","endLine":162,"endColumn":14,"fix":"166"},{"ruleId":"156","severity":1,"message":"157","line":170,"column":13,"nodeType":"147","messageId":"158","endLine":174,"endColumn":14,"fix":"167"},{"ruleId":"131","severity":1,"message":"168","line":37,"column":6,"nodeType":"133","endLine":37,"endColumn":17,"suggestions":"169"},{"ruleId":"145","severity":1,"message":"146","line":93,"column":11,"nodeType":"147","endLine":93,"endColumn":58},{"ruleId":"145","severity":1,"message":"146","line":111,"column":11,"nodeType":"147","endLine":115,"endColumn":13},{"ruleId":"145","severity":1,"message":"146","line":125,"column":13,"nodeType":"147","endLine":129,"endColumn":15},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'setSideBarOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'SearchFilter', 'isSideBarOpen', and 'shortFilms'. Either include them or remove the dependency array.","ArrayExpression",["170"],"'withRouter' is defined but never used.","'useEffect' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isSideBarOpen'. Either include it or remove the dependency array.",["171"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.some() expects a return value from arrow function.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","'isValid' is assigned a value but never used.","'setValid' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'login' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["172"],"'userContext' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetMovie'. Either include it or remove the dependency array.",["173"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"174","text":"175"},"'isSideBarOpen' is assigned a value but never used.","'OpenSideBar' is assigned a value but never used.","'CloseSideBar' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"range":"176","text":"175"},{"range":"177","text":"175"},{"range":"178","text":"175"},"React Hook useEffect has missing dependencies: 'isValid.email', 'isValid.name', 'userContext.email', and 'userContext.name'. Either include them or remove the dependency array.",["179"],{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},[8721,8721]," rel=\"noreferrer\"",[6033,6033],[6460,6460],[6895,6895],{"desc":"188","fix":"189"},"Update the dependencies array to be: [SearchFilter, isSideBarOpen, shortFilms]",{"range":"190","text":"191"},"Update the dependencies array to be: [isSideBarOpen]",{"range":"192","text":"193"},"Update the dependencies array to be: [login, props]",{"range":"194","text":"195"},"Update the dependencies array to be: [moreCount, props.movies, props.savedMovies, props.isShortFilms, GetMovie]",{"range":"196","text":"197"},"Update the dependencies array to be: [isValid.email, isValid.name, userContext.email, userContext.name, userValue]",{"range":"198","text":"199"},[1542,1544],"[SearchFilter, isSideBarOpen, shortFilms]",[1369,1371],"[isSideBarOpen]",[2149,2151],"[login, props]",[4293,4357],"[moreCount, props.movies, props.savedMovies, props.isShortFilms, GetMovie]",[1224,1235],"[isValid.email, isValid.name, userContext.email, userContext.name, userValue]"]