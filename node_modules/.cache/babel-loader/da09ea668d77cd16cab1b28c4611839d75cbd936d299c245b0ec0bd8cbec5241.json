{"ast":null,"code":"export default class Api {\n  constructor(options) {\n    this.getProfile = () => {\n      return fetch(`${this._baseUrl}/users/me`, {\n        method: \"GET\",\n        headers: this._headers,\n        credentials: \"include\"\n      }).then(res => this._getResponseData(res));\n    };\n    this.login = (password, email) => {\n      return fetch(`${this._baseUrl}/signin`, {\n        method: \"POST\",\n        headers: this._headers,\n        credentials: \"include\",\n        body: JSON.stringify({\n          password,\n          email\n        })\n      }).then(res => this._getResponseData(res));\n    };\n    this.getMovies = () => {\n      return fetch(`${this._baseUrl}/movies`, {\n        method: `GET`,\n        headers: this._headers,\n        credentials: \"include\"\n      }).then(res => this._getResponseData(res));\n    };\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n}\nexport const api = new Api({\n  baseUrl: \"http://localhost:3001\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["Api","constructor","options","getProfile","fetch","_baseUrl","method","headers","_headers","credentials","then","res","_getResponseData","login","password","email","body","JSON","stringify","getMovies","baseUrl","ok","Promise","reject","status","json","api"],"sources":["D:/dev/movies/frontend/src/utils/Api.js"],"sourcesContent":["export default class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  _getResponseData(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  getProfile = () => {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n      credentials: \"include\",\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  login = (password, email) => {\r\n    return fetch(`${this._baseUrl}/signin`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ password, email }),\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  getMovies = () => {\r\n    return fetch(`${this._baseUrl}/movies`, {\r\n      method: `GET`,\r\n      headers: this._headers,\r\n      credentials: \"include\",\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: \"http://localhost:3001\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n"],"mappings":"AAAA,eAAe,MAAMA,GAAG,CAAC;EACvBC,WAAW,CAACC,OAAO,EAAE;IAAA,KAYrBC,UAAU,GAAG,MAAM;MACjB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACC,QAAS,WAAU,EAAE;QACxCC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE,IAAI,CAACC,QAAQ;QACtBC,WAAW,EAAE;MACf,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK,IAAI,CAACC,gBAAgB,CAACD,GAAG,CAAC,CAAC;IAC9C,CAAC;IAAA,KAEDE,KAAK,GAAG,CAACC,QAAQ,EAAEC,KAAK,KAAK;MAC3B,OAAOX,KAAK,CAAE,GAAE,IAAI,CAACC,QAAS,SAAQ,EAAE;QACtCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE,IAAI,CAACC,QAAQ;QACtBC,WAAW,EAAE,SAAS;QACtBO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEJ,QAAQ;UAAEC;QAAM,CAAC;MAC1C,CAAC,CAAC,CAACL,IAAI,CAAEC,GAAG,IAAK,IAAI,CAACC,gBAAgB,CAACD,GAAG,CAAC,CAAC;IAC9C,CAAC;IAAA,KAEDQ,SAAS,GAAG,MAAM;MAChB,OAAOf,KAAK,CAAE,GAAE,IAAI,CAACC,QAAS,SAAQ,EAAE;QACtCC,MAAM,EAAG,KAAI;QACbC,OAAO,EAAE,IAAI,CAACC,QAAQ;QACtBC,WAAW,EAAE;MACf,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK,IAAI,CAACC,gBAAgB,CAACD,GAAG,CAAC,CAAC;IAC9C,CAAC;IAlCC,IAAI,CAACN,QAAQ,GAAGH,OAAO,CAACkB,OAAO;IAC/B,IAAI,CAACZ,QAAQ,GAAGN,OAAO,CAACK,OAAO;EACjC;EAEAK,gBAAgB,CAACD,GAAG,EAAE;IACpB,IAAI,CAACA,GAAG,CAACU,EAAE,EAAE;MACX,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUZ,GAAG,CAACa,MAAO,EAAC,CAAC;IAChD;IACA,OAAOb,GAAG,CAACc,IAAI,EAAE;EACnB;AA0BF;AAEA,OAAO,MAAMC,GAAG,GAAG,IAAI1B,GAAG,CAAC;EACzBoB,OAAO,EAAE,uBAAuB;EAChCb,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}