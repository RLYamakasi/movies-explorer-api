{"ast":null,"code":"export default class MainApi {\n  constructor(options) {\n    this.getProfile = () => {\n      return fetch(`${this._baseUrl}/users/me`, {\n        method: \"GET\",\n        headers: this._headers,\n        credentials: \"include\"\n      }).then(res => this._getResponseData(res));\n    };\n    this.register = (name, password, email) => {\n      return fetch(`${this._baseUrl}/signup`, {\n        method: \"POST\",\n        headers: this._headers,\n        credentials: \"include\",\n        body: JSON.stringify({\n          name,\n          password,\n          email\n        })\n      }).then(res => this._getResponseData(res));\n    };\n    this.login = (password, email) => {\n      return fetch(`${this._baseUrl}/signin`, {\n        method: \"POST\",\n        headers: this._headers,\n        credentials: \"include\",\n        body: JSON.stringify({\n          password,\n          email\n        })\n      }).then(res => this._getResponseData(res));\n    };\n    this.getMovies = () => {\n      return fetch(`${this._baseUrl}/movies`, {\n        method: `GET`,\n        headers: this._headers,\n        credentials: \"include\"\n      }).then(res => this._getResponseData(res));\n    };\n    this.clearCookie = () => {\n      return fetch(`${this._baseUrl}/signout`, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: this._headers\n      }).then(res => this._getResponseData(res));\n    };\n    this.patchProfile = (name, email) => {\n      return fetch(`${this._baseUrl}/users/me`, {\n        method: \"PATCH\",\n        headers: this._headers,\n        credentials: \"include\",\n        body: JSON.stringify({\n          name: name,\n          about: about\n        })\n      }).then(res => this._getResponseData(res));\n    };\n    this.DeleteMovie = movieId => {\n      return fetch(`${this._baseUrl}/movies/${movieId}`, {\n        method: \"Delete\",\n        credentials: \"include\",\n        headers: this._headers\n      }).then(res => this._getResponseData(res));\n    };\n    this.addToFavorite = (country, director, duration, year, description, image, thumbnail, trailerLink, owner, movieId, nameRU, nameEN) => {\n      return fetch(`${this._baseUrl}/movies`, {\n        method: `POST`,\n        headers: this._headers,\n        credentials: \"include\",\n        body: JSON.stringify({\n          country,\n          director,\n          duration,\n          year,\n          description,\n          image,\n          thumbnail,\n          trailerLink,\n          owner,\n          movieId,\n          nameRU,\n          nameEN\n        })\n      }).then(res => this._getResponseData(res));\n    };\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n}\nexport const api = new MainApi({\n  baseUrl: \"http://localhost:3001\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["MainApi","constructor","options","getProfile","fetch","_baseUrl","method","headers","_headers","credentials","then","res","_getResponseData","register","name","password","email","body","JSON","stringify","login","getMovies","clearCookie","patchProfile","about","DeleteMovie","movieId","addToFavorite","country","director","duration","year","description","image","thumbnail","trailerLink","owner","nameRU","nameEN","baseUrl","ok","Promise","reject","status","json","api"],"sources":["D:/dev/movies/frontend/src/utils/MainApi.js"],"sourcesContent":["export default class MainApi {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  _getResponseData(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  getProfile = () => {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n      credentials: \"include\",\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  register = (name, password, email) => {\r\n    return fetch(`${this._baseUrl}/signup`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ name, password, email }),\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  login = (password, email) => {\r\n    return fetch(`${this._baseUrl}/signin`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      credentials: \"include\",\r\n      body: JSON.stringify({ password, email }),\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  getMovies = () => {\r\n    return fetch(`${this._baseUrl}/movies`, {\r\n      method: `GET`,\r\n      headers: this._headers,\r\n      credentials: \"include\",\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  clearCookie = () => {\r\n    return fetch(`${this._baseUrl}/signout`, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: this._headers,\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  patchProfile = (name, email) => {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      credentials: \"include\",\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      }),\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  DeleteMovie = (movieId) => {\r\n    return fetch(`${this._baseUrl}/movies/${movieId}`, {\r\n      method: \"Delete\",\r\n      credentials: \"include\",\r\n      headers: this._headers,\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n\r\n  addToFavorite = (\r\n    country,\r\n    director,\r\n    duration,\r\n    year,\r\n    description,\r\n    image,\r\n    thumbnail,\r\n    trailerLink,\r\n    owner,\r\n    movieId,\r\n    nameRU,\r\n    nameEN\r\n  ) => {\r\n    return fetch(`${this._baseUrl}/movies`, {\r\n      method: `POST`,\r\n      headers: this._headers,\r\n      credentials: \"include\",\r\n      body: JSON.stringify({\r\n        country,\r\n        director,\r\n        duration,\r\n        year,\r\n        description,\r\n        image,\r\n        thumbnail,\r\n        trailerLink,\r\n        owner,\r\n        movieId,\r\n        nameRU,\r\n        nameEN,\r\n      }),\r\n    }).then((res) => this._getResponseData(res));\r\n  };\r\n}\r\n\r\nexport const api = new MainApi({\r\n  baseUrl: \"http://localhost:3001\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}